import geopandas as gpd
import pandas as pd
from shapely.geometry import Polygon
import matplotlib.pyplot as plt

# Function to decode geohash into a bounding box
def decode_geohash(gh):
    base32 = "0123456789bcdefghjkmnpqrstuvwxyz"
    lat, lon = [-90, 90], [-180, 180]
    even = True
    for c in gh:
        cd = base32.index(c)
        for mask in [16, 8, 4, 2, 1]:
            if even:
                mid = (lon[0] + lon[1]) / 2
                lon[1 if cd & mask else 0] = mid
            else:
                mid = (lat[0] + lat[1]) / 2
                lat[1 if cd & mask else 0] = mid
            even = not even
    return Polygon([(lon[0], lat[0]), (lon[0], lat[1]), (lon[1], lat[1]), (lon[1], lat[0]), (lon[0], lat[0])])

# Create a sample DataFrame
data = {'geohash': ['u4pruydqqvj', 'u4pruydqqvj1', 'u4pruydqqvj2']}
df = pd.DataFrame(data)

# Convert geohashes to polygons
df['geometry'] = df['geohash'].apply(decode_geohash)

# Convert to GeoDataFrame
gdf = gpd.GeoDataFrame(df, geometry='geometry', crs="EPSG:4326")

# Load world map
world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))

# Plot world map and geohashes
fig, ax = plt.subplots(figsize=(10, 6))
world.plot(ax=ax, color='lightgrey')
gdf.plot(ax=ax, edgecolor='red', facecolor='none', linewidth=1.5)
plt.show()
